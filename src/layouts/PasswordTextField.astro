---
import TextField from '../components/TextField.astro';

export interface Props {
	text?: string;
	placeholder?: string;
	name?: string;
	length?: string;
	id?: string;
	maxLength?: number | string;
}

const { text, placeholder, name, type, length, id } = Astro.props;
---

<div class="pwdTextField">
	<TextField
		text={text}
		placeholder={placeholder}
		name={name}
		type={type}
		length={length}
		id={id}
		type="password"
	/>
	<img src="/img/icons/eye-off.svg" />
</div>
<style define:vars={{ length }}>
	.pwdTextField {
		width: fit-content;
		height: fit-content;
		position: relative;
	}

	.pwdTextField img {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		left: var(--length);
		cursor: pointer;
		height: 1.8rem;
		width: 1.8rem;
	}

	.pwdTextField input {
		padding-right: 30px;
	}
</style>
<script>
	const textfields = document.getElementsByClassName('pwdTextField');
	for (let i = 0; i < textfields.length; i++) {
		const textfield = textfields[i];
		const eye = textfield.getElementsByTagName('img')[0];
		const pwd = textfield.getElementsByTagName('input')[0];
		let visible = false;

		eye.addEventListener('click', () => {
			if (visible) {
				pwd.setAttribute('type', 'password');
				eye.setAttribute('src', '/img/icons/eye-off.svg');
				visible = false;
			} else {
				pwd.setAttribute('type', 'text');
				eye.setAttribute('src', '/img/icons/eye-on.svg');
				visible = true;
			}
		});
	}
</script>
